#!/bin/bash
set -e

commit_msg_file="$1"
commit_msg=$(grep -v "^#" "$commit_msg_file" | sed '/^$/d' | sed '/^# -\+\s*>8\s*-\+/,$d')

echo "Validating commit message..."

# Check if empty
[ -z "$(echo "$commit_msg" | tr -d '[:space:]')" ] && { echo "Error: Empty commit message"; exit 1; }

first_line=$(echo "$commit_msg" | head -n1)

# Length checks
len=${#first_line}
[ $len -lt 10 ] && { echo "Error: Message too short (min 10 chars)"; exit 1; }
[ $len -gt 50 ] && { echo "Error: Subject line too long (max 50 chars)"; exit 1; }

# Check body lines for maximum length (80 chars), skip first line
line_num=1
while IFS= read -r line; do
    if [ $line_num -gt 1 ] && [ ${#line} -gt 80 ]; then
        echo "Error: Body line too long (max 80 chars): '$line'"
        exit 1
    fi
    line_num=$((line_num + 1))
done <<< "$commit_msg"

# Allow merge commits
[[ "$first_line" =~ ^Merge ]] && { echo "Merge commit accepted"; exit 0; }

# Require conventional commit format
if [[ ! "$first_line" =~ ^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: ]]; then
    cat << EOF
Error: Use conventional commit format: <type>(<scope>): <description>

Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert

Examples:
  feat(auth): add user login
  fix: resolve timeout error
  docs: update readme

Your message: '$first_line'
EOF
    exit 1
fi

# Check for WIP-like patterns
if echo "$commit_msg" | grep -qiE "\b(wip|fixup|squash|todo|hack|temp)\b"; then
    echo "Error: Commit contains prohibited words (wip, fixup, squash, todo, hack, temp)"
    exit 1
fi

echo "Commit message valid!"